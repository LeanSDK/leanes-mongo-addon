"use strict";function t(t){return t&&"object"==typeof t&&"default"in t?t.default:t}var e=t(require("crypto")),o=require("mongodb"),i=t(require("mongo-parse"));function r(t,e,o,i){o&&Object.defineProperty(t,e,{enumerable:o.enumerable,configurable:o.configurable,writable:o.writable,value:o.initializer?o.initializer.call(i):void 0})}function n(t,e,o,i,r){var n={};return Object.keys(i).forEach((function(t){n[t]=i[t]})),n.enumerable=!!n.enumerable,n.configurable=!!n.configurable,("value"in n||n.initializer)&&(n.writable=!0),n=o.slice().reverse().reduce((function(o,i){return i(t,e,o)||o}),n),r&&void 0!==n.initializer&&(n.value=n.initializer?n.initializer.call(r):void 0,n.initializer=void 0),void 0===n.initializer&&(Object.defineProperty(t,e,n),n=null),n}var a=t=>{var e,o,i,a,s,c,l,p,u,y,d,h,w;const{CoreObject:m,initialize:$,partOf:g,meta:b,property:f,method:O,nameBy:j,injectable:x,inject:M,Utils:{_:v}}=t.NS;e=x(),o=g(t),i=M("CollectionFactory<*>"),$(a=e(a=o((w=h=class extends m{constructor(...t){super(...t),r(this,"_cursor",p,this),r(this,"_collection",u,this),r(this,"collectionName",y,this),r(this,"_collectionFactory",d,this)}get isClosed(){return null==this._cursor||(null==this._cursor.isClosed()||this._cursor.isClosed())}setIterable(t){return this._cursor=t,this}setCollection(t){return this._collection=t,this}get collection(){return null!=this.collectionName?this._collectionFactory(this.collectionName):this._collection}async toArray(){const t=[];for(;await this.hasNext();)t.push(await this.next());return t}async next(){if(null==this._cursor)return;const t=await this._cursor.next();return await(null!=this.collection?this.collection.normalize(t):t)}async hasNext(){return await!this.isClosed&&await this._cursor.hasNext()}async close(){await Promise.resolve(null!=this._cursor?this._cursor.close():void 0)}async count(){return null==this._cursor?0:await await this._cursor.count(!0)}async forEach(t){let e=0;try{for(;await this.hasNext();)await t(await this.next(),e++)}catch(t){throw await this.close(),t}}async map(t){let e=0;try{const o=[];for(;await this.hasNext();)o.push(await t(await this.next(),e++));return o}catch(t){throw await this.close(),t}}async filter(t){let e=0;const o=[];try{for(;await this.hasNext();){const i=await this.next();await t(i,e++)&&o.push(i)}return o}catch(t){throw await this.close(),t}}async find(t){let e=0,o=null;try{for(;await this.hasNext();){const i=await this.next();if(await t(i,e++)){o=i;break}}return o}catch(t){throw await this.close(),t}}async compact(){if(null==this._cursor)return[];const t=[];try{for(;await this.hasNext();){const e=await this._cursor.next();if(!v.isEmpty(e)){const o=await(null!=this.collection?this.collection.normalize(e):e);t.push(o)}}return t}catch(t){throw await this.close(),t}}async reduce(t,e){try{let o=0,i=e;for(;await this.hasNext();)i=await t(i,await this.next(),o++);return i}catch(t){throw await this.close(),t}}async first(){try{const t=null!=await this.hasNext()?await this.next:null;return await this.close(),t}catch(t){throw await this.close(),t}}static async restoreObject(){throw new Error(`restoreObject method not supported for ${this.name}`)}static async replicateObject(){throw new Error(`replicateObject method not supported for ${this.name}`)}},h.__filename="/iterator/MongoCursor.js",h.object={},n(s=w,"__filename",[j],(c=(c=Object.getOwnPropertyDescriptor(s,"__filename"))?c.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return c}}),s),n(s,"object",[b],(l=(l=Object.getOwnPropertyDescriptor(s,"object"))?l.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return l}}),s),p=n(s.prototype,"_cursor",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),u=n(s.prototype,"_collection",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),n(s.prototype,"isClosed",[f],Object.getOwnPropertyDescriptor(s.prototype,"isClosed"),s.prototype),n(s.prototype,"setIterable",[O],Object.getOwnPropertyDescriptor(s.prototype,"setIterable"),s.prototype),n(s.prototype,"setCollection",[O],Object.getOwnPropertyDescriptor(s.prototype,"setCollection"),s.prototype),y=n(s.prototype,"collectionName",[f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),d=n(s.prototype,"_collectionFactory",[i,f],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),n(s.prototype,"collection",[f],Object.getOwnPropertyDescriptor(s.prototype,"collection"),s.prototype),n(s.prototype,"toArray",[O],Object.getOwnPropertyDescriptor(s.prototype,"toArray"),s.prototype),n(s.prototype,"next",[O],Object.getOwnPropertyDescriptor(s.prototype,"next"),s.prototype),n(s.prototype,"hasNext",[O],Object.getOwnPropertyDescriptor(s.prototype,"hasNext"),s.prototype),n(s.prototype,"close",[O],Object.getOwnPropertyDescriptor(s.prototype,"close"),s.prototype),n(s.prototype,"count",[O],Object.getOwnPropertyDescriptor(s.prototype,"count"),s.prototype),n(s.prototype,"forEach",[O],Object.getOwnPropertyDescriptor(s.prototype,"forEach"),s.prototype),n(s.prototype,"map",[O],Object.getOwnPropertyDescriptor(s.prototype,"map"),s.prototype),n(s.prototype,"filter",[O],Object.getOwnPropertyDescriptor(s.prototype,"filter"),s.prototype),n(s.prototype,"find",[O],Object.getOwnPropertyDescriptor(s.prototype,"find"),s.prototype),n(s.prototype,"compact",[O],Object.getOwnPropertyDescriptor(s.prototype,"compact"),s.prototype),n(s.prototype,"reduce",[O],Object.getOwnPropertyDescriptor(s.prototype,"reduce"),s.prototype),n(s.prototype,"first",[O],Object.getOwnPropertyDescriptor(s.prototype,"first"),s.prototype),n(s,"restoreObject",[O],Object.getOwnPropertyDescriptor(s,"restoreObject"),s),n(s,"replicateObject",[O],Object.getOwnPropertyDescriptor(s,"replicateObject"),s),a=s))||a)||a)},s=t=>{const{initializeMixin:e,meta:o,property:i,method:a,inject:s,Utils:{jsonStringify:c}}=t.NS;t.defineMixin("/mixins/MongoCollectionMixin.js",(t=>{var c,l,p,u,y,d,h;return c=s("CursorFactory<*>"),e((h=d=class extends t{constructor(...t){super(...t),r(this,"_cursorFactory",y,this)}async takeMany(t){const e=await this.adapter.takeMany(this.delegate,t);return this._cursorFactory(this.getName(),e,"MongoCursor")}async takeAll(){const t=await this.adapter.takeAll(this.delegate);return this._cursorFactory(this.getName(),t,"MongoCursor")}},d.object={},n(p=h,"object",[o],(u=(u=Object.getOwnPropertyDescriptor(p,"object"))?u.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return u}}),p),y=n(p.prototype,"_cursorFactory",[c,i],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),n(p.prototype,"takeMany",[a],Object.getOwnPropertyDescriptor(p.prototype,"takeMany"),p.prototype),n(p.prototype,"takeAll",[a],Object.getOwnPropertyDescriptor(p.prototype,"takeAll"),p.prototype),l=p))||l}))},c=t=>{const{initializeMixin:o,meta:i,property:r,method:a}=t.NS;t.defineMixin("/mixins/MongoSerializerMixin.js",(t=>{var r,s,c,l,p;return o((p=l=class extends t{async normalize(t,e){return e.rev=e._rev,e._rev=void 0,delete e._rev,await t.normalize(e,this.collection)}async serialize(t,o=null){const i=t.constructor,r=await i.serialize(t,o);r.rev=void 0;const n=e.createHash("md5");return n.update(JSON.stringify(r)),r._rev=n.digest("hex"),delete r.rev,r}},l.object={},n(s=p,"object",[i],(c=(c=Object.getOwnPropertyDescriptor(s,"object"))?c.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return c}}),s),n(s.prototype,"normalize",[a],Object.getOwnPropertyDescriptor(s.prototype,"normalize"),s.prototype),n(s.prototype,"serialize",[a],Object.getOwnPropertyDescriptor(s.prototype,"serialize"),s.prototype),r=s))||r}))},l=t=>{const{UP:e,DOWN:o,SUPPORTED_TYPES:i,Pipes:r,initializeMixin:a,meta:s,property:c,method:l,Utils:{_:p,jsonStringify:u}}=t.NS,{LogMessage:y}=r.NS,{SEND_TO_LOG:d,LEVELS:h,DEBUG:w}=y,m=async(t,e)=>await new Promise(((o,i)=>{t.collection(e,{strict:!0},((t,e)=>{null!=t?i(t):o(e)}))}));t.defineMixin("/mixins/MongoMigrationMixin.js",(t=>{var e,o,r,c,y;return a((y=c=class extends t{async createCollection(t,e){const o=this.collection.collectionFullName(t),i=i.createCollection(o,e)}async createEdgeCollection(t,e,o){const i=this.collection.collectionFullName(`${t}_${e}`),r=await this.collection.connection;this.collection.send(d,`MongoMigrationMixin::createEdgeCollection qualifiedName = ${i}, options = ${u(o)}`,h[w]),await r.createCollection(i,o)}async addField(t,e,o){const i=this.collection.collectionFullName(t);if(p.isString(o))return;let r=null;if(r=null!=o.default?p.isNumber(o.default)||p.isBoolean(o.default)?o.default:p.isDate(o.default)?o.default.toISOString():p.isString(o.default)?`${o.default}`:null:null,null!=r){const t=await this.collection.connection;this.collection.send(d,`MongoMigrationMixin::addField qualifiedName = ${i}, $set: ${u({[`${e}`]:r})}`,h[w]);const o=await m(t,i);await o.updateMany({},{$set:{[`${e}`]:r},w:1})}}async addIndex(t,e,o){const i=this.collection.collectionFullName(t),r=await this.collection.connection,n=await m(r,i),a={};e.forEach((t=>{a[t]=1}));const s={unique:o.unique,sparse:o.sparse,background:o.background,name:o.name};this.collection.send(d,`MongoMigrationMixin::addIndex indexFields = ${u(a)}, opts = ${u(s)}`,h[w]),await n.ensureIndex(a,s)}async addTimestamps(t,e={}){}async changeCollection(t,e){}async changeField(t,e,o={}){const{json:r,binary:n,boolean:a,date:s,datetime:c,number:l,decimal:y,float:$,integer:g,primary_key:b,string:f,text:O,time:j,timestamp:x,array:M,hash:v}=i,N=this.collection.collectionFullName(t),P=await this.collection.connection,D=await m(P,N),F=await D.find().batchSize(1),_=p.isString(o)?o:o.type;for(;await F.hasNext();){const t=await F.next();let o=null;switch(_){case a:o=Boolean(t[e]);break;case y|$|g|l:o=Number(t[e]);break;case f|O|b|n|M:o=JSON.stringify(t[e]);break;case r|v:o=JSON.parse(String(t[e]));break;case s|c:o=new Date(t[e]).toISOString();break;case j|x:o=Number(new Date(t[e]))}}this.collection.send(d,`MongoMigrationMixin::changeField qualifiedName = ${N}, _id: ${u(document._id)}, $set: ${u({[`${e}`]:newValue})}`,h[w]),await D.updateOne({_id:document._id},{$set:{[`${e}`]:newValue}})}async renameField(t,e,o){const i=this.collection.collectionFullName(t),r=await this.collection.connection,n=await m(r,i);this.collection.send(d,`MongoMigrationMixin::renameField qualifiedName = ${i}, $rename: ${u({[`${oldFieldName}`]:o})}`,h[w]),await n.updateMany({},{$rename:{[`${oldFieldName}`]:o}})}async renameIndex(t,e,o){}async renameCollection(t,e){const o=this.collection.collectionFullName(t),i=this.collection.collectionFullName(e);this.collection.send(d,`MongoMigrationMixin::renameCollection qualifiedName = ${o}, newQualifiedName = ${i}`,h[w]);const r=await this.collection.connection,n=await m(r,o);await n.rename(i)}async dropCollection(t){const e=this.collection.collectionFullName(t),o=await this.collection.connection;0!==(await o.listCollections({name:e}).toArray()).length&&(this.collection.send(d,`MongoMigrationMixin::dropCollection qualifiedName = ${e}`,h[w]),await o.dropCollection(e))}async dropEdgeCollection(t,e){const o=await this.collection.connection,i=this.collection.collectionFullName(`${t}_${e}`);0!==(await o.listCollections({name:i}).toArray()).length&&(this.collection.send(d,`MongoMigrationMixin::dropEdgeCollection qualifiedName = ${i}`,h[w]),await o.dropCollection(i))}async removeField(t,e){const o=this.collection.collectionFullName(t),i=await this.collection.connection,r=await m(i,o);this.collection.send(d,`MongoMigrationMixin::removeField qualifiedName = ${o}, $unset: ${u({[`${e}`]:""})}`,h[w]),await r.updateMany({},{$unset:{[`${e}`]:""}},{w:1})}async removeIndex(t,e,o){const i=this.collection.collectionFullName(t),r=await this.collection.connection,n=await m(r,i),a=o.name;if(null==a){const t={};e.forEach((e=>{t[e]=1}));await n.ensureIndex(t,{unique:o.unique,sparse:o.sparse,background:o.background,name:o.name})}await n.indexExists(a)&&(this.collection.send(d,`MongoMigrationMixin::removeIndex qualifiedName = ${i}, indexName = ${a}, indexFields = ${u(indexFields)}, options = ${u(o)}`,h[w]),await n.dropIndex(a))}async removeTimestamps(t,e={}){const o=this.collection.collectionFullName(t),i=await this.collection.connection,r=await m(i,o),n={createdAt:null,updatedAt:null,deletedAt:null};this.collection.send(d,`MongoMigrationMixin::removeTimestamps qualifiedName = ${o}, $unset: ${u(n)}`,h[w]),await r.updateMany({},{$unset:n},{w:1})}},c.object={},n(o=y,"object",[s],(r=(r=Object.getOwnPropertyDescriptor(o,"object"))?r.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return r}}),o),n(o.prototype,"createCollection",[l],Object.getOwnPropertyDescriptor(o.prototype,"createCollection"),o.prototype),n(o.prototype,"createEdgeCollection",[l],Object.getOwnPropertyDescriptor(o.prototype,"createEdgeCollection"),o.prototype),n(o.prototype,"addField",[l],Object.getOwnPropertyDescriptor(o.prototype,"addField"),o.prototype),n(o.prototype,"addIndex",[l],Object.getOwnPropertyDescriptor(o.prototype,"addIndex"),o.prototype),n(o.prototype,"addTimestamps",[l],Object.getOwnPropertyDescriptor(o.prototype,"addTimestamps"),o.prototype),n(o.prototype,"changeCollection",[l],Object.getOwnPropertyDescriptor(o.prototype,"changeCollection"),o.prototype),n(o.prototype,"changeField",[l],Object.getOwnPropertyDescriptor(o.prototype,"changeField"),o.prototype),n(o.prototype,"renameField",[l],Object.getOwnPropertyDescriptor(o.prototype,"renameField"),o.prototype),n(o.prototype,"renameIndex",[l],Object.getOwnPropertyDescriptor(o.prototype,"renameIndex"),o.prototype),n(o.prototype,"renameCollection",[l],Object.getOwnPropertyDescriptor(o.prototype,"renameCollection"),o.prototype),n(o.prototype,"dropCollection",[l],Object.getOwnPropertyDescriptor(o.prototype,"dropCollection"),o.prototype),n(o.prototype,"dropEdgeCollection",[l],Object.getOwnPropertyDescriptor(o.prototype,"dropEdgeCollection"),o.prototype),n(o.prototype,"removeField",[l],Object.getOwnPropertyDescriptor(o.prototype,"removeField"),o.prototype),n(o.prototype,"removeIndex",[l],Object.getOwnPropertyDescriptor(o.prototype,"removeIndex"),o.prototype),n(o.prototype,"removeTimestamps",[l],Object.getOwnPropertyDescriptor(o.prototype,"removeTimestamps"),o.prototype),e=o))||e}))},p=t=>{const{initializeMixin:e,meta:o,method:i}=t.NS;t.defineMixin("/mixins/BucketCollectionMixin.js",(t=>{var r,a,s,c,l;return e((l=c=class extends t{async createFileWriteStream(t,e={}){return await this.adapter.createFileWriteStream(t,e)}async createFileReadStream(t){return await this.adapter.createFileReadStream(t)}async fileExists(t){return await this.adapter.fileExists(t)}async removeFile(t){return await this.adapter.removeFile(t)}},c.object={},n(a=l,"object",[o],(s=(s=Object.getOwnPropertyDescriptor(a,"object"))?s.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return s}}),a),n(a.prototype,"createFileWriteStream",[i],Object.getOwnPropertyDescriptor(a.prototype,"createFileWriteStream"),a.prototype),n(a.prototype,"createFileReadStream",[i],Object.getOwnPropertyDescriptor(a.prototype,"createFileReadStream"),a.prototype),n(a.prototype,"fileExists",[i],Object.getOwnPropertyDescriptor(a.prototype,"fileExists"),a.prototype),n(a.prototype,"removeFile",[i],Object.getOwnPropertyDescriptor(a.prototype,"removeFile"),a.prototype),r=a))||r}))},u=t=>{const{initializeMixin:e,meta:o,property:i,method:r}=t.NS;t.defineMixin("/mixins/QueryableMongoCollectionMixin.js",(t=>{var i,a,s,c,l;return e((l=c=class extends t{async takeBy(t,e={}){const o=await this.adapter.takeBy(this.delegate,t,e);return this._cursorFactory(this.getName(),o,"MongoCursor")}async exists(t){return await this.adapter.exists(this.delegate,t)}async executeQuery(t){const e=await this.adapter.executeQuery(this.delegate,t);return t.isCustomReturn?null!=e?this._cursorFactory(null,e,"MongoCursor"):this._cursorFactory(null,[],"Cursor"):this._cursorFactory(this.getName(),e,"MongoCursor")}},c.object={},n(a=l,"object",[o],(s=(s=Object.getOwnPropertyDescriptor(a,"object"))?s.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return s}}),a),n(a.prototype,"takeBy",[r],Object.getOwnPropertyDescriptor(a.prototype,"takeBy"),a.prototype),n(a.prototype,"exists",[r],Object.getOwnPropertyDescriptor(a.prototype,"exists"),a.prototype),n(a.prototype,"executeQuery",[r],Object.getOwnPropertyDescriptor(a.prototype,"executeQuery"),a.prototype),i=a))||i}))},y=t=>{const{Pipes:e,initializeMixin:i,meta:a,property:s,method:c,Utils:{jsonStringify:l,assert:p,inflect:u}}=t.NS,{LogMessage:y}=e.NS,{SEND_TO_LOG:d,LEVELS:h,DEBUG:w}=y,m=new Map,$=new Map;t.defineMixin("/mixins/MongoAdapterMixin.js",(t=>{var e,y,g,b,f,O,j,x,M,v,N;return i((N=v=class extends t{constructor(...t){super(...t),r(this,"_collection",b,this),r(this,"host",f,this),r(this,"port",O,this),r(this,"dbName",j,this),r(this,"username",x,this),r(this,"password",M,this)}get connection(){const{username:t,password:e,host:i,port:r,dbName:n}=this;return null==m.get(`${i}:${r}/${n}`)&&m.set(`${i}:${r}/${n}`,(async()=>{const a=`mongodb://${null!=t&&null!=e?`${t}:${e}@`:""}${i}:${r}/${n}?authSource=admin`;return await o.MongoClient.connect(a)})()),m.get(`${i}:${r}/${n}`)}get collection(){return null==this._collection&&(this._collection=(async()=>{const t=await this.connection,e=this.collectionName();return await new Promise(((o,i)=>{t.collection(e,{strict:!0},((t,e)=>{null!=t?i(t):o(e)}))}))})()),this._collection}collectionName(){return`${u.underscore(this.Module.name)}_${u.pluralize(u.underscore((this.getName()||"").replace(/Adapter$/,"")))}`}onRegister(){super.onRegister(...arguments);const{host:t,port:e,dbName:o}=this;(()=>{this.connection})();let i=$.get(`${t}:${e}/${o}`);i=null!=i?i:0,i++,$.set(`${t}:${e}/${o}`,i)}async onRemove(){super.onRemove(...arguments);const{host:t,port:e,dbName:o}=this;let i=$.get(`${t}:${e}/${o}`);if(i--,$.set(`${t}:${e}/${o}`,i),0===i){const i=await m.get(`${t}:${e}/${o}`);await i.close(!0),m.delete(`${t}:${e}/${o}`),$.delete(`${t}:${e}/${o}`)}}async push(t,e){const o=await this.collection,i=await o.stats(),r=await o.findOne({id:{$eq:e.id}});return this.send(d,`MongoAdapterMixin::push ns = ${i.ns}, snapshot = ${l(e)}`,h[w]),p(null==r,`Record with the same id=${e.id} exists in collection`),await o.insertOne(e,{w:"majority",j:!0,wtimeout:500}),await o.findOne({id:{$eq:e.id}})}async remove(t,e){const o=await this.collection,i=await o.stats();this.send(d,`MongoAdapterMixin::remove ns = ${i.ns}, id = ${e}`,h[w]),await o.deleteOne({id:{$eq:e}},{w:"majority",j:!0,wtimeout:500})}async take(t,e){const o=await this.collection,i=await o.stats();return this.send(d,`MongoAdapterMixin::take ns = ${i.ns}, id = ${e}`,h[w]),await o.findOne({id:{$eq:e}})}async takeMany(t,e){const o=await this.collection,i=await o.stats();return this.send(d,`MongoAdapterMixin::takeMany ns = ${i.ns}, ids = ${l(e)}`,h[w]),await o.find({id:{$in:e}})}async takeAll(t){const e=await this.collection,o=await e.stats();return this.send(d,`MongoAdapterMixin::takeAll ns = ${o.ns}`,h[w]),await e.find()}async override(t,e,o){const i=await this.collection,r=await i.stats();return this.send(d,`MongoAdapterMixin::override ns = ${r.ns}, id = ${e}, snapshot = ${l(o)}`,h[w]),await i.updateOne({id:{$eq:e}},{$set:o},{multi:!0,w:"majority",j:!0,wtimeout:500}),await i.findOne({id:{$eq:e}})}async includes(t,e){const o=await this.collection,i=await o.stats();return this.send(d,`MongoAdapterMixin::includes ns = ${i.ns}, id = ${e}`,h[w]),null!=await o.findOne({id:{$eq:e}})}async length(t){const e=await this.collection,o=await e.stats();return this.send(d,`MongoAdapterMixin::length ns = ${o.ns}`,h[w]),o.count}},v.object={},n(y=N,"object",[a],(g=(g=Object.getOwnPropertyDescriptor(y,"object"))?g.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return g}}),y),b=n(y.prototype,"_collection",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),f=n(y.prototype,"host",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"localhost"}}),O=n(y.prototype,"port",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"27017"}}),j=n(y.prototype,"dbName",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return"dbName"}}),x=n(y.prototype,"username",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),M=n(y.prototype,"password",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return null}}),n(y.prototype,"connection",[s],Object.getOwnPropertyDescriptor(y.prototype,"connection"),y.prototype),n(y.prototype,"collection",[s],Object.getOwnPropertyDescriptor(y.prototype,"collection"),y.prototype),n(y.prototype,"collectionName",[c],Object.getOwnPropertyDescriptor(y.prototype,"collectionName"),y.prototype),n(y.prototype,"onRegister",[c],Object.getOwnPropertyDescriptor(y.prototype,"onRegister"),y.prototype),n(y.prototype,"onRemove",[c],Object.getOwnPropertyDescriptor(y.prototype,"onRemove"),y.prototype),n(y.prototype,"push",[c],Object.getOwnPropertyDescriptor(y.prototype,"push"),y.prototype),n(y.prototype,"remove",[c],Object.getOwnPropertyDescriptor(y.prototype,"remove"),y.prototype),n(y.prototype,"take",[c],Object.getOwnPropertyDescriptor(y.prototype,"take"),y.prototype),n(y.prototype,"takeMany",[c],Object.getOwnPropertyDescriptor(y.prototype,"takeMany"),y.prototype),n(y.prototype,"takeAll",[c],Object.getOwnPropertyDescriptor(y.prototype,"takeAll"),y.prototype),n(y.prototype,"override",[c],Object.getOwnPropertyDescriptor(y.prototype,"override"),y.prototype),n(y.prototype,"includes",[c],Object.getOwnPropertyDescriptor(y.prototype,"includes"),y.prototype),n(y.prototype,"length",[c],Object.getOwnPropertyDescriptor(y.prototype,"length"),y.prototype),e=y))||e}))},d=t=>{const{Pipes:e,initializeMixin:i,meta:a,property:s,method:c,Utils:{jsonStringify:l,assign:p}}=t.NS,{LogMessage:u}=e.NS,{SEND_TO_LOG:y,LEVELS:d,DEBUG:h}=u;t.defineMixin("/mixins/BucketAdapterMixin.js",(t=>{var e,u,w,m,$,g;return i((g=$=class extends t{constructor(...t){super(...t),r(this,"_bucket",m,this)}get bucket(){return null==this._bucket&&(this._bucket=(async()=>{const t=(await this.connection).db(`${this.dbName}_fs`);return new o.GridFSBucket(t,{chunkSizeBytes:64512,bucketName:"binary-store"})})()),this._bucket}async createFileWriteStream(t,e={}){const o=await this.bucket;this.send(y,`BucketAdapterMixin::createFileWriteStream opts = ${l(t)}`,d[h]);const i=p({},{dbName:this.dbName},e);return o.openUploadStream(t.filename,{metadata:i})}async createFileReadStream(t){const e=await this.bucket;return this.send(y,`BucketAdapterMixin::createFileReadStream opts = ${l(t)}`,d[h]),await this.fileExists(t)?e.openDownloadStreamByName(t.filename,{}):void 0}async fileExists(t){const e=await this.bucket;return this.send(y,`BucketAdapterMixin::fileExists opts = ${l(t)}`,d[h]),await await e.find({filename:t.filename}).hasNext()}async removeFile(t){const e=await this.bucket;this.send(y,`BucketAdapterMixin::removeFile opts = ${l(t)}`,d[h]);const o=await e.find({filename:t.filename}),i=await o.next();null!=i&&await e.delete(i._id)}},$.object={},n(u=g,"object",[a],(w=(w=Object.getOwnPropertyDescriptor(u,"object"))?w.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return w}}),u),m=n(u.prototype,"_bucket",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),n(u.prototype,"bucket",[s],Object.getOwnPropertyDescriptor(u.prototype,"bucket"),u.prototype),n(u.prototype,"createFileWriteStream",[c],Object.getOwnPropertyDescriptor(u.prototype,"createFileWriteStream"),u.prototype),n(u.prototype,"createFileReadStream",[c],Object.getOwnPropertyDescriptor(u.prototype,"createFileReadStream"),u.prototype),n(u.prototype,"fileExists",[c],Object.getOwnPropertyDescriptor(u.prototype,"fileExists"),u.prototype),n(u.prototype,"removeFile",[c],Object.getOwnPropertyDescriptor(u.prototype,"removeFile"),u.prototype),e=u))||e}))};const h={}.hasOwnProperty;var w=t=>{const{Pipes:e,initializeMixin:o,meta:a,property:s,method:c,Utils:{_:l,jsonStringify:p,moment:u,assign:y,assert:d}}=t.NS,{LogMessage:w}=e.NS,{SEND_TO_LOG:m,LEVELS:$,DEBUG:g}=w,b=t=>l.isString(t)?/^\@doc\./.test(t)?t.replace("@doc.",""):t.replace("@",""):t,f=(t,e,o,i)=>{const r=(e=e.utc()).startOf(o).toISOString(),n=e.clone().endOf(o).toISOString();return i?{$and:[{[`${t}`]:{$gte:r},[`${t}`]:{$lt:n}}]}:{$not:{$and:[{[`${t}`]:{$gte:r},[`${t}`]:{$lt:n}}]}}};t.defineMixin("/mixins/QueryableMongoAdapterMixin.js",(t=>{var e,y,w,O,j,x;return o((x=j=class extends t{constructor(...t){super(...t),r(this,"operatorsMap",O,this)}async takeBy(t,e,o={}){const r=await this.collection,n=await r.stats(),a=this.parseFilter(i.parse(e));this.send(m,`QueryableMongoAdapterMixin::takeBy ns = ${n.ns}, voQuery = ${p(a)}`,$[g]);let s=await r.find(a);const c=o.$limit;null!=c&&(s=s.limit(c));const l=o.$offset;null!=l&&(s=s.skip(l));const u=o.$sort;return null!=u&&(s=s.sort(u.reduce(((t,e)=>{for(const o in e){if(!h.call(e,o))continue;const i=e[o];t[b(o)]="ASC"===i?1:-1}return t})),{})),s}async exists(t,e){const o=await this.collection,r=await o.stats(),n=this.parseFilter(i.parse(e));return this.send(m,`QueryableMongoAdapterMixin::exists ns = ${r.ns}, voQuery = ${p(n)}`,$[g]),0!==await o.count(n)}parseFilter(t){const{field:e,parts:o=[],operator:i,operand:r,implicitField:n}=t;if(null!=e&&"$elemMatch"!==i&&0===o.length){const t=this.delegate.customFilters[e];if(null!=t&&null!=t[i]){return t[i].call(this,r)}return this.operatorsMap[i](e,r)}if(null==e||"$elemMatch"!==i)return this.operatorsMap[null!=i?i:"$and"](o.map(this.parseFilter.bind(this)));this.operatorsMap[i](e,o.reduce(((t,e)=>{if(!n||null!=e.field||null!=e.parts&&0!==e.parts.length)return Object.assign(t,this.parseFilter(e));{const o=this.operatorsMap[e.operator]("temporaryField",e.operand);return Object.assign(t,o.temporaryField)}}),{}))}async parseQuery(t,e){d(null==e.$join,"`$join` not available for Mongo queries"),d(null==e.$let,"`$let` not available for Mongo queries"),d(null==e.$aggregate,"`$aggregate` not available for Mongo queries");const o={};let r=!1;if(null!=e.$remove){if(null!=e.$into&&(o.queryType="removeBy",null!=e.$forIn)){o.pipeline=[];const t=e.$filter;null!=t&&o.pipeline.push({$match:this.parseFilter(i.parse(t))});const n=e.$sort;null!=n&&o.pipeline.push({$sort:n.reduce(((t,e)=>{for(const o in e){if(!h.call(e,o))continue;const i=e[o];t[b(o)]="ASC"===i?1:-1}return t}),{})});const a=e.$offset;null!=a&&o.pipeline.push({$skip:a});const s=e.$limit;return null!=s&&o.pipeline.push({$limit:s}),r=!0,o}}else if(null!=e.$patch){if(null!=e.$into&&(o.queryType="patchBy",null!=e.$forIn)){o.pipeline=[];const t=e.$filter;null!=t&&o.pipeline.push({$match:this.parseFilter(i.parse(t))});const n=e.$sort;null!=n&&o.pipeline.push({$sort:n.reduce(((t,e)=>{for(const o in e){if(!h.call(e,o))continue;const i=e[o];t[b(o)]="ASC"===i?1:-1}return t}),{})});const a=e.$offset;null!=a&&o.pipeline.push({$skip:a});const s=e.$limit;return null!=s&&o.pipeline.push({$limit:s}),o.patch=e.$patch,r=!0,o}}else if(null!=e.$forIn){o.queryType="query",o.pipeline=[];const t=e.$filter;null!=t&&o.pipeline.push({$match:this.parseFilter(i.parse(t))});const n=e.$sort;null!=n&&o.pipeline.push({$sort:n.reduce(((t,e)=>{for(const o in e){if(!h.call(e,o))continue;const i=e[o];t[b(o)]="ASC"===i?1:-1}return t}),{})});const a=e.$offset;null!=a&&o.pipeline.push({$skip:a});const s=e.$limit;null!=s&&o.pipeline.push({$limit:s});if(null!=e.$collect){r=!0;const t={};for(const e in item){if(!h.call(item,e))continue;item[e];t[b(void 0)]=b(void 0)}const n=e.$into,a=null!=n?b(n):"GROUP";o.pipeline.push({$group:{_id:t,[`${a}`]:{$push:Object.keys(this.delegate.attributes).reduce((function(t,e){return t[e]=`$${e}`,t}),{})}}});const s=e.$having;if(null!=s&&o.pipeline.push({$match:this.parseFilter(i.parse(s))}),null!=e.$count)r=!0,o.pipeline.push({$count:"result"});else{const t=e.$sum;if(null!=t)r=!0,o.pipeline.push({$group:{_id:null,result:{$sum:`${b(t)}`}}}),o.pipeline.push({$project:{_id:0}});else{const t=e.$min;if(null!=t)r=!0,o.pipeline.push({$sort:{[`${b(t)}`]:1}}),o.pipeline.push({$limit:1}),o.pipeline.push({$project:{_id:0,result:`${b(t)}`}});else{const t=e.$max;if(null!=t)r=!0,o.pipeline.push({$sort:{[`${b(t)}`]:-1}}),o.pipeline.push({$limit:1}),o.pipeline.push({$project:{_id:0,result:`${b(t)}`}});else{const t=e.$avg;if(null!=t)r=!0,o.pipeline.push({$group:{_id:null,result:{$avg:`${b(t)}`}}}),o.pipeline.push({$project:{_id:0}});else{const t=e.$return;if(null!=t)"@doc"!==t&&(r=!0),l.isString(t)&&"@doc"!==t&&o.pipeline.push({$project:{_id:0,[`${b(t)}`]:1}});else if(l.isObject(t))for(key in t){if(h.call(t,key))continue;t[key]}e.$distinct&&o.pipeline.push({$group:{_id:"$$CURRENT"}})}}}}}}}return o.isCustomReturn=null!=r&&r,o}async executeQuery(t,e){const o=await this.collection,i=await o.stats();this.send(m,`QueryableMongoAdapterMixin::executeQuery ns = ${i.ns}, aoQuery = ${p(e)}`,$[g]);let r=null;switch(e.queryType){case"query":r=await o.aggregate(e.pipeline,{cursor:{batchSize:1}});break;case"patchBy":{const t=e.pipeline;t.push({$project:{_id:1}});const i=MongoCursor.new(null,await o.aggregate(t,{cursor:{batchSize:1e3}})),n=await i.map(co.wrap((t=>t._id)));r=await o.updateMany({_id:{$in:n}},{$set:e.patch},{multi:!0,w:"majority",j:!0,wtimeout:500},null);break}case"removeBy":{const t=e.pipeline;t.push({$project:{_id:1}});const i=MongoCursor.new(null,await o.aggregate(t,{cursor:{batchSize:1e3}})),n=await i.map(co.wrap((t=>t._id)));r=await o.deleteMany({_id:{$in:n}},{w:"majority",j:!0,wtimeout:500},null);break}}return r}},j.object={},n(y=x,"object",[a],(w=(w=Object.getOwnPropertyDescriptor(y,"object"))?w.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return w}}),y),n(y.prototype,"takeBy",[c],Object.getOwnPropertyDescriptor(y.prototype,"takeBy"),y.prototype),n(y.prototype,"exists",[c],Object.getOwnPropertyDescriptor(y.prototype,"exists"),y.prototype),O=n(y.prototype,"operatorsMap",[s],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return{$and:t=>({$and:t}),$or:t=>({$or:t}),$not:t=>({$not:t}),$nor:t=>({$nor:t}),$eq:(t,e)=>({[`${b(t)}`]:{$eq:b(e)}}),$ne:(t,e)=>({[`${b(t)}`]:{$ne:b(e)}}),$lt:(t,e)=>({[`${b(t)}`]:{$lt:b(e)}}),$lte:(t,e)=>({[`${b(t)}`]:{$lte:b(e)}}),$gt:(t,e)=>({[`${b(t)}`]:{$gt:b(e)}}),$gte:(t,e)=>({[`${b(t)}`]:{$gte:b(e)}}),$in:(t,e)=>({[`${b(t)}`]:{$in:e}}),$nin:(t,e)=>({[`${b(t)}`]:{$nin:e}}),$all:(t,e)=>({[`${b(t)}`]:{$all:e}}),$elemMatch:(t,e)=>({[`${b(t)}`]:{$elemMatch:e}}),$size:(t,e)=>({[`${b(t)}`]:{$size:e}}),$exists:(t,e)=>({[`${b(t)}`]:{$exists:e}}),$type:(t,e)=>({[`${b(t)}`]:{$type:e}}),$mod:(t,e)=>({[`${b(t)}`]:{$mod:e}}),$regex:(t,e,o)=>{const i=/^\/([\s\S]*)\/(i?m?)$/i.exec(e);if(null==i)throw new Error("Invalid Regular Expression");const[r,n,a]=i,s={$regex:new RegExp(n,a)};return null!=o&&(s.$options=o),{[`${b(t)}`]:s}},$text:()=>{throw new Error("Not supported")},$where:()=>{throw new Error("Not supported")},$td:(t,e)=>f(b(t),u(),"day",e),$ld:(t,e)=>f(b(t),u().subtract(1,"days"),"day",e),$tw:(t,e)=>f(b(t),u(),"week",e),$lw:(t,e)=>f(b(t),u().subtract(1,"weeks"),"week",e),$tm:(t,e)=>f(b(t),u(),"month",e),$lm:(t,e)=>f(b(t),u().subtract(1,"months"),"month",e),$ty:(t,e)=>f(b(t),u(),"year",e),$ly:(t,e)=>f(b(t),u().subtract(1,"years"),"year",e)}}}),n(y.prototype,"parseFilter",[c],Object.getOwnPropertyDescriptor(y.prototype,"parseFilter"),y.prototype),n(y.prototype,"parseQuery",[c],Object.getOwnPropertyDescriptor(y.prototype,"parseQuery"),y.prototype),n(y.prototype,"executeQuery",[c],Object.getOwnPropertyDescriptor(y.prototype,"executeQuery"),y.prototype),e=y))||e}))},m=t=>{const{initializeMixin:e,meta:o,method:i}=t.NS;t.defineMixin("/mixins/MongoFacadeMixin.js",(t=>{var r,a,s,c,l;return e((l=c=class extends t{initializeFacade(){super.initializeFacade(...arguments),this.isBound("MongoCursor")||this.bind("MongoCursor").to(this.Module.NS.MongoCursor)}},c.object={},n(a=l,"object",[o],(s=(s=Object.getOwnPropertyDescriptor(a,"object"))?s.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return s}}),a),n(a.prototype,"initializeFacade",[i],Object.getOwnPropertyDescriptor(a.prototype,"initializeFacade"),a.prototype),r=a))||r}))};module.exports=t=>{const{initializeMixin:e,meta:o,extend:i}=t.NS;return["MongoAddon",t=>{var r,h,$,g,b;return i("MongoFacadeMixin","Facade")(r=m(r=w(r=d(r=y(r=u(r=p(r=s(r=l(r=c(r=a(r=e((b=g=class extends t{},g.object={},n(h=b,"object",[o],($=($=Object.getOwnPropertyDescriptor(h,"object"))?$.value:void 0,{enumerable:!0,configurable:!0,writable:!0,initializer:function(){return $}}),h),r=h))||r)||r)||r)||r)||r)||r)||r)||r)||r)||r)||r)||r}]};
